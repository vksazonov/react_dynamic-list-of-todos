{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","openModal","className","map","todo","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","sort","setQuery","setSort","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","closeModal","href","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setSelectedTodo","setSelectedUser","isModalOpen","setModalOpen","isLoading","setIsLoading","hasError","sethasError","loadTodos","useCallback","a","todoList","useEffect","visibleTodos","filter","intutFilter","toLowerCase","includes","trim","getUser","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4c8832c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  openModal: (userId: number, todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  openModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n                >\n                  {title}\n\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => openModal(userId, todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(selectedTodo\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye')}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\ninterface Props {\n  query: string;\n  sort: string;\n  setQuery: (query:string) => void;\n  setSort: (sort: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  sort,\n  setQuery,\n  setSort,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sort}\n          onChange={(event) => setSort(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedUser: User | null;\n  selectedTodo: Todo | null;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedUser,\n  selectedTodo,\n  closeModal,\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {!selectedUser || !selectedTodo ? (\n      <Loader />\n    ) : (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${selectedTodo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => closeModal()}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {selectedTodo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* <strong className=\"has-text-success\">Done</strong> */}\n            <strong className=\"has-text-danger\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n            </strong>\n\n            {' by '}\n\n            <a href=\"mailto:Sincere@april.biz\">\n              {selectedUser.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const [sort, setSort] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, sethasError] = useState(false);\n\n  const loadTodos = useCallback(async () => {\n    try {\n      const todoList = await getTodos();\n\n      setIsLoading(false);\n      setTodos(todoList);\n    } catch {\n      sethasError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const openModal = (userId: number, todo: Todo) => {\n    setModalOpen(true);\n    getUser(userId).then(user => setSelectedUser(user));\n    setSelectedTodo(todo);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedUser(null);\n    setSelectedTodo(null);\n  };\n\n  const filterTodos = todos.filter(todo => {\n    const intutFilter = todo.title.toLowerCase().includes(query.trim().toLowerCase());\n\n    switch (sort) {\n      case 'active': return intutFilter && !todo.completed;\n      case 'completed': return intutFilter && todo.completed;\n      default: return intutFilter;\n    }\n  });\n\n  const visibleTodos = filterTodos;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                sort={sort}\n                setSort={setSort}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {hasError\n              && <h2>Sorry, something went wrong</h2>}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                openModal={openModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <TodoModal\n          selectedUser={selectedUser}\n          selectedTodo={selectedTodo}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}